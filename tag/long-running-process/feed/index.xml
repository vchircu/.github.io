<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	
	xmlns:georss="http://www.georss.org/georss"
	xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#"
	>

<channel>
	<title>long running process &#8211; Simple Oriented Architecture</title>
	<atom:link href="./index.html" rel="self" type="application/rss+xml" />
	<link>./../../../index.html</link>
	<description></description>
	<lastBuildDate>Fri, 08 Nov 2024 09:34:12 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.6.2</generator>
<site xmlns="com-wordpress:feed-additions:1">108420443</site>	<item>
		<title>Handling Failure in Long Running Processes</title>
		<link>./../../../handling-failure-in-long-running-processes/index.html</link>
		
		<dc:creator><![CDATA[Victor Chircu]]></dc:creator>
		<pubDate>Sat, 13 Jul 2019 09:41:39 +0000</pubDate>
				<category><![CDATA[Architecture]]></category>
		<category><![CDATA[NServiceBus]]></category>
		<category><![CDATA[dead letter channel]]></category>
		<category><![CDATA[idempotent receiver]]></category>
		<category><![CDATA[integration]]></category>
		<category><![CDATA[long running process]]></category>
		<category><![CDATA[messaging]]></category>
		<category><![CDATA[microservices]]></category>
		<category><![CDATA[retries]]></category>
		<category><![CDATA[Saga]]></category>
		<category><![CDATA[soa]]></category>
		<guid isPermaLink="false">./../../../index.html?p=1116</guid>

					<description><![CDATA[In the previous posts in this series, weâ€™ve seen some examples of long running processes, how to model them and <a class="more-link" href="./../../../handling-failure-in-long-running-processes/index.html">Continue Reading</a>]]></description>
		
		
		
		<post-id xmlns="com-wordpress:feed-additions:1">1116</post-id>	</item>
		<item>
		<title>Storing the state of a Long Running Process</title>
		<link>./../../../storing-the-state-of-a-long-running-process/index.html</link>
		
		<dc:creator><![CDATA[Victor Chircu]]></dc:creator>
		<pubDate>Wed, 04 Jul 2018 04:20:18 +0000</pubDate>
				<category><![CDATA[Architecture]]></category>
		<category><![CDATA[NServiceBus]]></category>
		<category><![CDATA[integration]]></category>
		<category><![CDATA[long running process]]></category>
		<category><![CDATA[messaging]]></category>
		<category><![CDATA[microservices]]></category>
		<category><![CDATA[process manager]]></category>
		<category><![CDATA[routing slip]]></category>
		<category><![CDATA[soa]]></category>
		<guid isPermaLink="false">./../../../index.html?p=907</guid>

					<description><![CDATA[In the previous two posts in this series, we&#8217;ve seen some examples of long running processes and how to model <a class="more-link" href="./../../../storing-the-state-of-a-long-running-process/index.html">Continue Reading</a>]]></description>
		
		
		
		<post-id xmlns="com-wordpress:feed-additions:1">907</post-id>	</item>
		<item>
		<title>Modelling Long Running Processes: Choreography versus Orchestration</title>
		<link>./../../../modelling-long-running-processes-choreography-versus-orchestration/index.html</link>
		
		<dc:creator><![CDATA[Victor Chircu]]></dc:creator>
		<pubDate>Tue, 26 Jun 2018 05:18:15 +0000</pubDate>
				<category><![CDATA[Architecture]]></category>
		<category><![CDATA[NServiceBus]]></category>
		<category><![CDATA[choreography]]></category>
		<category><![CDATA[integration]]></category>
		<category><![CDATA[long running process]]></category>
		<category><![CDATA[messaging]]></category>
		<category><![CDATA[microservices]]></category>
		<category><![CDATA[orchestration]]></category>
		<category><![CDATA[soa]]></category>
		<guid isPermaLink="false">./../../../index.html?p=873</guid>

					<description><![CDATA[In the previous article we&#8217;ve seen some examples of long running processes. The purpose of this blog post is to <a class="more-link" href="./../../../modelling-long-running-processes-choreography-versus-orchestration/index.html">Continue Reading</a>]]></description>
		
		
		
		<post-id xmlns="com-wordpress:feed-additions:1">873</post-id>	</item>
		<item>
		<title>What are Long Running Processes?</title>
		<link>./../../../what-are-long-running-processes/index.html</link>
		
		<dc:creator><![CDATA[Victor Chircu]]></dc:creator>
		<pubDate>Tue, 19 Jun 2018 15:06:22 +0000</pubDate>
				<category><![CDATA[Architecture]]></category>
		<category><![CDATA[integration]]></category>
		<category><![CDATA[long running process]]></category>
		<category><![CDATA[microservices]]></category>
		<category><![CDATA[soa]]></category>
		<guid isPermaLink="false">./../../../index.html?p=845</guid>

					<description><![CDATA[Most of us are working on distributed systems. Most of us are implementing long running processes. Of course we would <a class="more-link" href="./../../../what-are-long-running-processes/index.html">Continue Reading</a>]]></description>
		
		
		
		<post-id xmlns="com-wordpress:feed-additions:1">845</post-id>	</item>
	</channel>
</rss>
