<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	
	xmlns:georss="http://www.georss.org/georss"
	xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#"
	>

<channel>
	<title>quality &#8211; Simple Oriented Architecture</title>
	<atom:link href="/tag/quality/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description></description>
	<lastBuildDate>Fri, 08 Nov 2024 10:17:23 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.6.2</generator>
<site xmlns="com-wordpress:feed-additions:1">108420443</site>	<item>
		<title>Defining a Test Strategy for Continuous Delivery</title>
		<link>/test-strategy-for-continuous-delivery/</link>
		
		<dc:creator><![CDATA[Victor Chircu]]></dc:creator>
		<pubDate>Fri, 14 Jun 2019 05:26:55 +0000</pubDate>
				<category><![CDATA[Quality]]></category>
		<category><![CDATA[continuous delivery]]></category>
		<category><![CDATA[microservices]]></category>
		<category><![CDATA[quality]]></category>
		<category><![CDATA[test strategy]]></category>
		<category><![CDATA[testing]]></category>
		<category><![CDATA[testing pyramid]]></category>
		<guid isPermaLink="false">/?p=1060</guid>

					<description><![CDATA[Testing is an important part of building a product right. Continuous Delivery makes that more explicit by building quality in. <a class="more-link" href="/test-strategy-for-continuous-delivery/">Continue Reading</a>]]></description>
		
		
		
		<post-id xmlns="com-wordpress:feed-additions:1">1060</post-id>	</item>
		<item>
		<title>Defining Test Boundaries &#8211; An example</title>
		<link>/defining-test-boundaries/</link>
		
		<dc:creator><![CDATA[Victor Chircu]]></dc:creator>
		<pubDate>Fri, 07 Jun 2019 07:58:11 +0000</pubDate>
				<category><![CDATA[Architecture]]></category>
		<category><![CDATA[Quality]]></category>
		<category><![CDATA[architecture]]></category>
		<category><![CDATA[clean architecture]]></category>
		<category><![CDATA[component test]]></category>
		<category><![CDATA[integration]]></category>
		<category><![CDATA[quality]]></category>
		<category><![CDATA[test strategy]]></category>
		<category><![CDATA[testing]]></category>
		<category><![CDATA[unit test]]></category>
		<category><![CDATA[visualization]]></category>
		<guid isPermaLink="false">/?p=1076</guid>

					<description><![CDATA[I think that everybody agrees that testing is required in order to build a quality product. But there&#8217;s also a <a class="more-link" href="/defining-test-boundaries/">Continue Reading</a>]]></description>
		
		
		
		<post-id xmlns="com-wordpress:feed-additions:1">1076</post-id>	</item>
		<item>
		<title>Never stop making Process Improvements</title>
		<link>/never-stop-making-process-improvements/</link>
		
		<dc:creator><![CDATA[Victor Chircu]]></dc:creator>
		<pubDate>Tue, 16 Apr 2019 04:22:53 +0000</pubDate>
				<category><![CDATA[Process]]></category>
		<category><![CDATA[process]]></category>
		<category><![CDATA[quality]]></category>
		<category><![CDATA[testing]]></category>
		<guid isPermaLink="false">/?p=875</guid>

					<description><![CDATA[Have you ever been on a project where, because of the tight schedule or tight budget, the focus was only <a class="more-link" href="/never-stop-making-process-improvements/">Continue Reading</a>]]></description>
		
		
		
		<post-id xmlns="com-wordpress:feed-additions:1">875</post-id>	</item>
		<item>
		<title>Protecting the Design and Architecture of your application using NDepend</title>
		<link>/protecting-the-design-and-architecture-of-your-application-using-ndepend/</link>
		
		<dc:creator><![CDATA[Victor Chircu]]></dc:creator>
		<pubDate>Tue, 26 Feb 2019 04:21:20 +0000</pubDate>
				<category><![CDATA[Architecture]]></category>
		<category><![CDATA[Quality]]></category>
		<category><![CDATA[architecture]]></category>
		<category><![CDATA[clean architecture]]></category>
		<category><![CDATA[code smells]]></category>
		<category><![CDATA[dependnecy]]></category>
		<category><![CDATA[design]]></category>
		<category><![CDATA[design disharmonies]]></category>
		<category><![CDATA[detection strategy]]></category>
		<category><![CDATA[fitness function]]></category>
		<category><![CDATA[layered architecture]]></category>
		<category><![CDATA[NDepend]]></category>
		<category><![CDATA[quality]]></category>
		<category><![CDATA[soa]]></category>
		<category><![CDATA[versioning]]></category>
		<guid isPermaLink="false">/?p=974</guid>

					<description><![CDATA[We have all used code analysis tools on our projects and these are useful for identifying some code smells. The <a class="more-link" href="/protecting-the-design-and-architecture-of-your-application-using-ndepend/">Continue Reading</a>]]></description>
		
		
		
		<post-id xmlns="com-wordpress:feed-additions:1">974</post-id>	</item>
		<item>
		<title>What I&#8217;ve learned on the Crafted Code course</title>
		<link>/what-ive-learned-on-the-crafted-code-course/</link>
		
		<dc:creator><![CDATA[Victor Chircu]]></dc:creator>
		<pubDate>Wed, 31 Oct 2018 19:08:56 +0000</pubDate>
				<category><![CDATA[Architecture]]></category>
		<category><![CDATA[Clean Code]]></category>
		<category><![CDATA[Quality]]></category>
		<category><![CDATA[architecture]]></category>
		<category><![CDATA[design]]></category>
		<category><![CDATA[legacy code]]></category>
		<category><![CDATA[quality]]></category>
		<category><![CDATA[refactoring]]></category>
		<category><![CDATA[tdd]]></category>
		<category><![CDATA[testing]]></category>
		<guid isPermaLink="false">/?p=942</guid>

					<description><![CDATA[Last week was a good week for the IT community in Iasi thanks to Codecamp &#8211; 2018 autumn edition. One <a class="more-link" href="/what-ive-learned-on-the-crafted-code-course/">Continue Reading</a>]]></description>
		
		
		
		<post-id xmlns="com-wordpress:feed-additions:1">942</post-id>	</item>
		<item>
		<title>Book Review: Your Code as a Crime Scene</title>
		<link>/book-review-your-code-as-a-crime-scene/</link>
					<comments>/book-review-your-code-as-a-crime-scene/#comments</comments>
		
		<dc:creator><![CDATA[Victor Chircu]]></dc:creator>
		<pubDate>Tue, 24 Jan 2017 16:29:16 +0000</pubDate>
				<category><![CDATA[Books]]></category>
		<category><![CDATA[Quality]]></category>
		<category><![CDATA[books]]></category>
		<category><![CDATA[code smells]]></category>
		<category><![CDATA[git]]></category>
		<category><![CDATA[metrics]]></category>
		<category><![CDATA[quality]]></category>
		<category><![CDATA[VCS]]></category>
		<category><![CDATA[visualization]]></category>
		<guid isPermaLink="false">/?p=719</guid>

					<description><![CDATA[In the last couple of months I&#8217;ve been learning about what information can I extract from a codebase. I&#8217;ve written <a class="more-link" href="/book-review-your-code-as-a-crime-scene/">Continue Reading</a>]]></description>
		
					<wfw:commentRss>/book-review-your-code-as-a-crime-scene/feed/</wfw:commentRss>
			<slash:comments>2</slash:comments>
		
		
		<post-id xmlns="com-wordpress:feed-additions:1">719</post-id>	</item>
		<item>
		<title>Book Review: Object-Oriented Metrics in Practice</title>
		<link>/book-review-object-oriented-metrics-in-practice/</link>
					<comments>/book-review-object-oriented-metrics-in-practice/#comments</comments>
		
		<dc:creator><![CDATA[Victor Chircu]]></dc:creator>
		<pubDate>Sun, 04 Dec 2016 13:30:46 +0000</pubDate>
				<category><![CDATA[Books]]></category>
		<category><![CDATA[Quality]]></category>
		<category><![CDATA[books]]></category>
		<category><![CDATA[class blueprint]]></category>
		<category><![CDATA[code smells]]></category>
		<category><![CDATA[design disharmonies]]></category>
		<category><![CDATA[detection strategy]]></category>
		<category><![CDATA[metrics]]></category>
		<category><![CDATA[overview pyramid]]></category>
		<category><![CDATA[polymetric views]]></category>
		<category><![CDATA[quality]]></category>
		<category><![CDATA[visualization]]></category>
		<guid isPermaLink="false">/?p=503</guid>

					<description><![CDATA[I have been using static code analyzers for a while now. While these are useful, you need to spend a <a class="more-link" href="/book-review-object-oriented-metrics-in-practice/">Continue Reading</a>]]></description>
		
					<wfw:commentRss>/book-review-object-oriented-metrics-in-practice/feed/</wfw:commentRss>
			<slash:comments>4</slash:comments>
		
		
		<post-id xmlns="com-wordpress:feed-additions:1">503</post-id>	</item>
		<item>
		<title>Software Quality: Building the Product Right</title>
		<link>/software-quality-building-the-product-right/</link>
		
		<dc:creator><![CDATA[Victor Chircu]]></dc:creator>
		<pubDate>Wed, 22 Jun 2016 17:39:40 +0000</pubDate>
				<category><![CDATA[Quality]]></category>
		<category><![CDATA[agile]]></category>
		<category><![CDATA[architecture]]></category>
		<category><![CDATA[bounded context]]></category>
		<category><![CDATA[ddd]]></category>
		<category><![CDATA[design]]></category>
		<category><![CDATA[quality]]></category>
		<category><![CDATA[soa]]></category>
		<category><![CDATA[testing]]></category>
		<guid isPermaLink="false">/?p=141</guid>

					<description><![CDATA[In a previous blog post we discussed why building the right product is hard and some tips on how to <a class="more-link" href="/software-quality-building-the-product-right/">Continue Reading</a>]]></description>
		
		
		
		<post-id xmlns="com-wordpress:feed-additions:1">141</post-id>	</item>
		<item>
		<title>Software Quality: Building the Right Product</title>
		<link>/software-quality-building-the-right-product/</link>
					<comments>/software-quality-building-the-right-product/#comments</comments>
		
		<dc:creator><![CDATA[Victor Chircu]]></dc:creator>
		<pubDate>Sun, 17 Apr 2016 18:21:12 +0000</pubDate>
				<category><![CDATA[Quality]]></category>
		<category><![CDATA[agile]]></category>
		<category><![CDATA[bdd]]></category>
		<category><![CDATA[bounded context]]></category>
		<category><![CDATA[ddd]]></category>
		<category><![CDATA[lean]]></category>
		<category><![CDATA[perceived integrity]]></category>
		<category><![CDATA[quality]]></category>
		<category><![CDATA[ubiquitous language]]></category>
		<guid isPermaLink="false">/?p=133</guid>

					<description><![CDATA[If you ask a hundred developers to define software quality, you&#8217;ll probably get a hundred different answers. There are a lot of <a class="more-link" href="/software-quality-building-the-right-product/">Continue Reading</a>]]></description>
		
					<wfw:commentRss>/software-quality-building-the-right-product/feed/</wfw:commentRss>
			<slash:comments>1</slash:comments>
		
		
		<post-id xmlns="com-wordpress:feed-additions:1">133</post-id>	</item>
		<item>
		<title>Book Review:  Fifty Quick Ideas to Improve Your Tests</title>
		<link>/book-review-fifty-quick-ideas-to-improve-your-tests/</link>
		
		<dc:creator><![CDATA[Victor Chircu]]></dc:creator>
		<pubDate>Sun, 10 Apr 2016 15:08:44 +0000</pubDate>
				<category><![CDATA[Books]]></category>
		<category><![CDATA[bdd]]></category>
		<category><![CDATA[books]]></category>
		<category><![CDATA[quality]]></category>
		<category><![CDATA[specifications]]></category>
		<category><![CDATA[testing]]></category>
		<guid isPermaLink="false">/?p=68</guid>

					<description><![CDATA[Writing good tests is hard. Writing good specification is even harder. On my current project we treat test code with the <a class="more-link" href="/book-review-fifty-quick-ideas-to-improve-your-tests/">Continue Reading</a>]]></description>
		
		
		
		<post-id xmlns="com-wordpress:feed-additions:1">68</post-id>	</item>
	</channel>
</rss>
