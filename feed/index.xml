<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	
	xmlns:georss="http://www.georss.org/georss"
	xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#"
	>

<channel>
	<title>Simple Oriented Architecture</title>
	<atom:link href="/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description></description>
	<lastBuildDate>Fri, 08 Nov 2024 09:32:18 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.6.2</generator>
<site xmlns="com-wordpress:feed-additions:1">108420443</site>	<item>
		<title>How to identify common Code Smells using the NDepend API</title>
		<link>/how-to-identify-common-code-smells-using-the-ndepend-api/</link>
		
		<dc:creator><![CDATA[Victor Chircu]]></dc:creator>
		<pubDate>Fri, 27 Mar 2020 07:39:07 +0000</pubDate>
				<category><![CDATA[Clean Code]]></category>
		<category><![CDATA[Quality]]></category>
		<category><![CDATA[code smells]]></category>
		<category><![CDATA[detection strategy]]></category>
		<category><![CDATA[metrics]]></category>
		<category><![CDATA[NDepend]]></category>
		<category><![CDATA[NDepend.API]]></category>
		<guid isPermaLink="false">/?p=1183</guid>

					<description><![CDATA[Using CQLinq In a previous blog post we saw how we can detect common code smells using NDepend. In that <a class="more-link" href="/how-to-identify-common-code-smells-using-the-ndepend-api/">Continue Reading</a>]]></description>
		
		
		
		<post-id xmlns="com-wordpress:feed-additions:1">1183</post-id>	</item>
		<item>
		<title>Interviewing your architecture</title>
		<link>/interviewing-your-architecture/</link>
		
		<dc:creator><![CDATA[Victor Chircu]]></dc:creator>
		<pubDate>Fri, 28 Feb 2020 09:49:27 +0000</pubDate>
				<category><![CDATA[Architecture]]></category>
		<category><![CDATA[NServiceBus]]></category>
		<category><![CDATA[architecture]]></category>
		<category><![CDATA[architecture model]]></category>
		<category><![CDATA[diagrams]]></category>
		<category><![CDATA[messaging]]></category>
		<category><![CDATA[microservices]]></category>
		<category><![CDATA[neo4j]]></category>
		<guid isPermaLink="false">/?p=1143</guid>

					<description><![CDATA[In this microservices era, many teams are building messaging solutions. What starts as a simple solution with 5 deployment units <a class="more-link" href="/interviewing-your-architecture/">Continue Reading</a>]]></description>
		
		
		
		<post-id xmlns="com-wordpress:feed-additions:1">1143</post-id>	</item>
		<item>
		<title>NServiceBus: An Experience Report</title>
		<link>/nservicebus-an-experience-report/</link>
		
		<dc:creator><![CDATA[Victor Chircu]]></dc:creator>
		<pubDate>Fri, 30 Aug 2019 14:56:30 +0000</pubDate>
				<category><![CDATA[NServiceBus]]></category>
		<category><![CDATA[community]]></category>
		<category><![CDATA[documentation]]></category>
		<category><![CDATA[soa]]></category>
		<guid isPermaLink="false">/?p=1022</guid>

					<description><![CDATA[I&#8217;ve been working with NServiceBus (part of the Particular platform) for the past 5 years. In all this time, I&#8217;ve <a class="more-link" href="/nservicebus-an-experience-report/">Continue Reading</a>]]></description>
		
		
		
		<post-id xmlns="com-wordpress:feed-additions:1">1022</post-id>	</item>
		<item>
		<title>Handling Failure in Long Running Processes</title>
		<link>/handling-failure-in-long-running-processes/</link>
		
		<dc:creator><![CDATA[Victor Chircu]]></dc:creator>
		<pubDate>Sat, 13 Jul 2019 09:41:39 +0000</pubDate>
				<category><![CDATA[Architecture]]></category>
		<category><![CDATA[NServiceBus]]></category>
		<category><![CDATA[dead letter channel]]></category>
		<category><![CDATA[idempotent receiver]]></category>
		<category><![CDATA[integration]]></category>
		<category><![CDATA[long running process]]></category>
		<category><![CDATA[messaging]]></category>
		<category><![CDATA[microservices]]></category>
		<category><![CDATA[retries]]></category>
		<category><![CDATA[Saga]]></category>
		<category><![CDATA[soa]]></category>
		<guid isPermaLink="false">/?p=1116</guid>

					<description><![CDATA[In the previous posts in this series, weâ€™ve seen some examples of long running processes, how to model them and <a class="more-link" href="/handling-failure-in-long-running-processes/">Continue Reading</a>]]></description>
		
		
		
		<post-id xmlns="com-wordpress:feed-additions:1">1116</post-id>	</item>
		<item>
		<title>7 Strategies for Assigning Ids</title>
		<link>/7-strategies-for-assigning-ids/</link>
		
		<dc:creator><![CDATA[Victor Chircu]]></dc:creator>
		<pubDate>Fri, 21 Jun 2019 06:20:17 +0000</pubDate>
				<category><![CDATA[Architecture]]></category>
		<category><![CDATA[id]]></category>
		<category><![CDATA[identity]]></category>
		<guid isPermaLink="false">/?p=1107</guid>

					<description><![CDATA[Identities are the defining characteristic of an entity in Domain-Driven Design. And as soon as the Id is public and <a class="more-link" href="/7-strategies-for-assigning-ids/">Continue Reading</a>]]></description>
		
		
		
		<post-id xmlns="com-wordpress:feed-additions:1">1107</post-id>	</item>
		<item>
		<title>Defining a Test Strategy for Continuous Delivery</title>
		<link>/test-strategy-for-continuous-delivery/</link>
		
		<dc:creator><![CDATA[Victor Chircu]]></dc:creator>
		<pubDate>Fri, 14 Jun 2019 05:26:55 +0000</pubDate>
				<category><![CDATA[Quality]]></category>
		<category><![CDATA[continuous delivery]]></category>
		<category><![CDATA[microservices]]></category>
		<category><![CDATA[quality]]></category>
		<category><![CDATA[test strategy]]></category>
		<category><![CDATA[testing]]></category>
		<category><![CDATA[testing pyramid]]></category>
		<guid isPermaLink="false">/?p=1060</guid>

					<description><![CDATA[Testing is an important part of building a product right. Continuous Delivery makes that more explicit by building quality in. <a class="more-link" href="/test-strategy-for-continuous-delivery/">Continue Reading</a>]]></description>
		
		
		
		<post-id xmlns="com-wordpress:feed-additions:1">1060</post-id>	</item>
		<item>
		<title>Defining Test Boundaries &#8211; An example</title>
		<link>/defining-test-boundaries/</link>
		
		<dc:creator><![CDATA[Victor Chircu]]></dc:creator>
		<pubDate>Fri, 07 Jun 2019 07:58:11 +0000</pubDate>
				<category><![CDATA[Architecture]]></category>
		<category><![CDATA[Quality]]></category>
		<category><![CDATA[architecture]]></category>
		<category><![CDATA[clean architecture]]></category>
		<category><![CDATA[component test]]></category>
		<category><![CDATA[integration]]></category>
		<category><![CDATA[quality]]></category>
		<category><![CDATA[test strategy]]></category>
		<category><![CDATA[testing]]></category>
		<category><![CDATA[unit test]]></category>
		<category><![CDATA[visualization]]></category>
		<guid isPermaLink="false">/?p=1076</guid>

					<description><![CDATA[I think that everybody agrees that testing is required in order to build a quality product. But there&#8217;s also a <a class="more-link" href="/defining-test-boundaries/">Continue Reading</a>]]></description>
		
		
		
		<post-id xmlns="com-wordpress:feed-additions:1">1076</post-id>	</item>
		<item>
		<title>Never stop making Process Improvements</title>
		<link>/never-stop-making-process-improvements/</link>
		
		<dc:creator><![CDATA[Victor Chircu]]></dc:creator>
		<pubDate>Tue, 16 Apr 2019 04:22:53 +0000</pubDate>
				<category><![CDATA[Process]]></category>
		<category><![CDATA[process]]></category>
		<category><![CDATA[quality]]></category>
		<category><![CDATA[testing]]></category>
		<guid isPermaLink="false">/?p=875</guid>

					<description><![CDATA[Have you ever been on a project where, because of the tight schedule or tight budget, the focus was only <a class="more-link" href="/never-stop-making-process-improvements/">Continue Reading</a>]]></description>
		
		
		
		<post-id xmlns="com-wordpress:feed-additions:1">875</post-id>	</item>
		<item>
		<title>Book Review: No Estimates</title>
		<link>/book-review-no-estimates/</link>
		
		<dc:creator><![CDATA[Victor Chircu]]></dc:creator>
		<pubDate>Fri, 29 Mar 2019 14:54:39 +0000</pubDate>
				<category><![CDATA[Books]]></category>
		<category><![CDATA[Process]]></category>
		<category><![CDATA[agile]]></category>
		<category><![CDATA[book]]></category>
		<category><![CDATA[NoEstimates]]></category>
		<guid isPermaLink="false">/?p=960</guid>

					<description><![CDATA[As I&#8217;ve said in a previous post, I don&#8217;t like estimating. So I decided to have a look at Vasco <a class="more-link" href="/book-review-no-estimates/">Continue Reading</a>]]></description>
		
		
		
		<post-id xmlns="com-wordpress:feed-additions:1">960</post-id>	</item>
		<item>
		<title>Protecting the Design and Architecture of your application using NDepend</title>
		<link>/protecting-the-design-and-architecture-of-your-application-using-ndepend/</link>
		
		<dc:creator><![CDATA[Victor Chircu]]></dc:creator>
		<pubDate>Tue, 26 Feb 2019 04:21:20 +0000</pubDate>
				<category><![CDATA[Architecture]]></category>
		<category><![CDATA[Quality]]></category>
		<category><![CDATA[architecture]]></category>
		<category><![CDATA[clean architecture]]></category>
		<category><![CDATA[code smells]]></category>
		<category><![CDATA[dependnecy]]></category>
		<category><![CDATA[design]]></category>
		<category><![CDATA[design disharmonies]]></category>
		<category><![CDATA[detection strategy]]></category>
		<category><![CDATA[fitness function]]></category>
		<category><![CDATA[layered architecture]]></category>
		<category><![CDATA[NDepend]]></category>
		<category><![CDATA[quality]]></category>
		<category><![CDATA[soa]]></category>
		<category><![CDATA[versioning]]></category>
		<guid isPermaLink="false">/?p=974</guid>

					<description><![CDATA[We have all used code analysis tools on our projects and these are useful for identifying some code smells. The <a class="more-link" href="/protecting-the-design-and-architecture-of-your-application-using-ndepend/">Continue Reading</a>]]></description>
		
		
		
		<post-id xmlns="com-wordpress:feed-additions:1">974</post-id>	</item>
	</channel>
</rss>
